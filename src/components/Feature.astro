---
import AnimateOnScroll from './animations/AnimateOnScroll.tsx';
import AnimateListOnScroll from './animations/AnimateListOnScroll.tsx';

interface Props {
  imageSrc: string;
  imageAlt?: string;
  items: { text: string }[];
  reverse?: boolean; // true = texto izquierda / imagen derecha
}

const {
  imageSrc,
  imageAlt = '',
  items = [],
  reverse = false
} = Astro.props;

const gridClass = reverse
  ? 'lg:grid-cols-2 lg:grid-flow-col-dense' // texto primero
  : 'lg:grid-cols-2'; // imagen primero
---
<section class="bg-gray-50 pt-12 lg:pt-16 lg:pb-16">
  <div class={`max-w-7xl mx-auto px-6 lg:px-0 grid ${gridClass} gap-0 items-stretch h-full`}>

    <!-- Imagen -->
    <AnimateOnScroll client:load>
      <div class="w-full h-full">
        <img 
          src={imageSrc} 
          alt={imageAlt} 
          class="w-full h-full object-cover object-top rounded-lg"
        />
      </div>
    </AnimateOnScroll>

    <!-- Texto -->
    <AnimateListOnScroll client:load>
      <div class="flex flex-col justify-center h-full p-6 lg:p-12 bg-white">
        <ul class="flex flex-col gap-y-6 p-0 m-0">
          {items.map((item) => (
            <li class="flex items-start gap-x-4">
              <!-- Aquí puedes también pasar un SVG diferente por item si lo necesitas -->
              <svg 
                version="1.1" viewBox="0 0 32 32" width="32" height="32" fill="#1C274C" class="flex-shrink-0 mt-1"
              >
                <polyline fill="none" stroke="#1C274C" stroke-width="2" stroke-miterlimit="10" points="28,8 16,20 11,15"/>
                <path d="M26.7,13.5c0.2,0.8,0.3,1.6,0.3,2.5c0,6.1-4.9,11-11,11S5,22.1,5,16S9.9,5,16,5c3,0,5.7,1.2,7.6,3.1l1.4-1.4 C22.7,4.4,19.5,3,16,3C8.8,3,3,8.8,3,16s5.8,13,13,13s13-5.8,13-13c0-1.4-0.2-2.8-0.7-4.1L26.7,13.5z"/>
              </svg>  
              <p class="text-gray-700">{item.text}</p>
            </li>
          ))}
        </ul>
      </div>
    </AnimateListOnScroll>

  </div>
</section>
